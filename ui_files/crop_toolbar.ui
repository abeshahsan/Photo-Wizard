<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>edit_toolbar</class>
 <widget class="QWidget" name="edit_toolbar">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1003</width>
    <height>589</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <layout class="QGridLayout" name="gridLayout">
   <property name="horizontalSpacing">
    <number>0</number>
   </property>
   <item row="0" column="0">
    <widget class="QWidget" name="main_widget" native="true">
     <layout class="QHBoxLayout" name="horizontalLayout" stretch="0,0,0,0,0,0,0">
      <property name="spacing">
       <number>3</number>
      </property>
      <item>
       <spacer name="horizontalSpacer_2">
        <property name="orientation">
         <enum>Qt::Horizontal</enum>
        </property>
        <property name="sizeHint" stdset="0">
         <size>
          <width>40</width>
          <height>20</height>
         </size>
        </property>
       </spacer>
      </item>
      <item>
       <widget class="QPushButton" name="mirror_lr_button">
        <property name="styleSheet">
         <string notr="true">QPushButton{
background: #e5e1fc;
width: 150px;
}

QPushButton:hover {
    background-color: #d2d0ec; /* Button background color on hover */
    border: 1px solid #a39ee0; /* Button border color on hover */
}

QPushButton:pressed {
    background-color: #b2b0d8; /* Button background color when pressed */
    border: 1px solid #938fc4; /* Button border color when pressed */
}</string>
        </property>
        <property name="text">
         <string>Mirror Left-Right</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QPushButton" name="mirror_ud_button">
        <property name="styleSheet">
         <string notr="true">QPushButton{
background: #e5e1fc;
width: 150px;
}

QPushButton:hover {
    background-color: #d2d0ec; /* Button background color on hover */
    border: 1px solid #a39ee0; /* Button border color on hover */
}

QPushButton:pressed {
    background-color: #b2b0d8; /* Button background color when pressed */
    border: 1px solid #938fc4; /* Button border color when pressed */
}</string>
        </property>
        <property name="text">
         <string>Mirror Up-Down</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QPushButton" name="rotate_button">
        <property name="styleSheet">
         <string notr="true">QPushButton{
background: #e5e1fc;
width: 150px;
}

QPushButton:hover {
    background-color: #d2d0ec; /* Button background color on hover */
    border: 1px solid #a39ee0; /* Button border color on hover */
}

QPushButton:pressed {
    background-color: #b2b0d8; /* Button background color when pressed */
    border: 1px solid #938fc4; /* Button border color when pressed */
}</string>
        </property>
        <property name="text">
         <string>Rotate </string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QPushButton" name="save_button">
        <property name="styleSheet">
         <string notr="true">QPushButton{
background: #e5e1fc;
width: 150px;
}

QPushButton:hover {
    background-color: #d2d0ec; /* Button background color on hover */
    border: 1px solid #a39ee0; /* Button border color on hover */
}

QPushButton:pressed {
    background-color: #b2b0d8; /* Button background color when pressed */
    border: 1px solid #938fc4; /* Button border color when pressed */
}</string>
        </property>
        <property name="text">
         <string>Save</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QPushButton" name="cancel_button">
        <property name="styleSheet">
         <string notr="true"/>
        </property>
        <property name="text">
         <string>Cancel</string>
        </property>
       </widget>
      </item>
      <item>
       <spacer name="horizontalSpacer">
        <property name="orientation">
         <enum>Qt::Horizontal</enum>
        </property>
        <property name="sizeHint" stdset="0">
         <size>
          <width>40</width>
          <height>20</height>
         </size>
        </property>
       </spacer>
      </item>
     </layout>
    </widget>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections/>
</ui>
